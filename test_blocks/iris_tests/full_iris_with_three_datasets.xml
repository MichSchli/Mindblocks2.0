<block>
    <configuration>
        <learner>
            <max_iterations>1000</max_iterations>
            <report_loss_every>10</report_loss_every>
            <validate_every>100</validate_every>
        </learner>
        <variable name="IRIS">
            <train_value>iris.data</train_value>
            <test_value>iris.data</test_value>
            <validate_value>iris.data</validate_value>
        </variable>
    </configuration>
    <canvas name="main">
        <component name="reader" type="CsvReader">
            <file_path>/Users/micschli/Documents/Projects/Mindblocks/Mindblocks2.0/test_blocks/iris_tests/$IRIS.txt</file_path>
            <columns>string,string,string,string,string</columns>
        </component>
        <component name="batch_generator" type="BatchGenerator">
            <batch_size>10</batch_size>
        </component>
        <edge>
                <source socket="count">reader</source>
                <target socket="count">batch_generator</target>
        </edge>
        <component name="data_batcher" type="Batcher">
            <lazy>True</lazy>
        </component>
        <edge>
                <source socket="output">reader</source>
                <target socket="data">data_batcher</target>
        </edge>
        <edge>
                <source socket="batch">batch_generator</source>
                <target socket="indexes">data_batcher</target>
        </edge>

        <component name="data_splitter" type="DataSplitter">
            <pivot>3</pivot>
        </component>
        <edge>
                <source socket="output">data_batcher</source>
                <target socket="input">data_splitter</target>
        </edge>
        <component name="index" type="Index">
        </component>
        <component name="indexer" type="Indexer">
            <input_type>tensor:2</input_type>
            <input_column>0</input_column>
        </component>
        <edge>
                <source socket="right">data_splitter</source>
                <target socket="input">indexer</target>
        </edge>
        <edge>
                <source socket="index">index</source>
                <target socket="index">indexer</target>
        </edge>

        <component name="mlp" type="MultilayerPerceptron" language="tensorflow">
            <dimensions>4,20,3</dimensions>
        </component>
        <edge cast="float">
                <source socket="left">data_splitter</source>
                <target socket="input">mlp</target>
        </edge>

        <component name="softmax" type="Softmax" language="tensorflow">
        </component>
        <edge>
                <source socket="output">mlp</source>
                <target socket="input">softmax</target>
        </edge>
        <component name="argmax" type="Argmax" language="python">
        </component>
        <edge>
                <source socket="output">softmax</source>
                <target socket="input">argmax</target>
        </edge>
        <component name="accuracy" type="Accuracy" language="python">
            <mark socket="output">evaluate</mark>
        </component>
        <edge>
                <source socket="output">argmax</source>
                <target socket="predictions">accuracy</target>
        </edge>
        <edge>
                <source socket="output">indexer</source>
                <target socket="labels">accuracy</target>
        </edge>
        <edge>
                <source socket="count">reader</source>
                <target socket="normalization">accuracy</target>
        </edge>

        <component name="cross_ent" type="CrossEntropy" language="tensorflow">
            <mark socket="output">loss</mark>
        </component>
        <edge>
                <source socket="output">mlp</source>
                <target socket="logits">cross_ent</target>
        </edge>
        <edge>
                <source socket="output">indexer</source>
                <target socket="labels">cross_ent</target>
        </edge>
        <component name="adam_upd" type="AdamUpdater" language="tensorflow">
            <mark socket="update">update</mark>
        </component>
        <edge>
                <source socket="output">cross_ent</source>
                <target socket="loss">adam_upd</target>
        </edge>
    </canvas>
</block>