<block>
    <configuration>
        <variable name="max_iterations">
            <default_value>5000</default_value>
        </variable>
        <variable name="report_loss_every_n">
            <default_value>10</default_value>
        </variable>

        <variable name="data_folder">
        </variable>
        <variable name="mode_folder">
            <train_value>train</train_value>
            <validate_value>test</validate_value>
            <test_value>test</test_value>
        </variable>
        <variable name="embedding_filepath">
        </variable>
    </configuration>
    <canvas name="main">
        <component name="sentence_reader" type="ConllReader">
            <file_path>$data_folder/$mode_folder/sentences.conll</file_path>
            <columns>int,string,string,string,string</columns>
            <start_token>&lt;s&gt;</start_token>
            <stop_token>&lt;/s&gt;</stop_token>
        </component>

        <component name="relation_reader" type="ListReader">
            <file_path>$data_folder/$mode_folder/all_relations.txt</file_path>
            <separators>\n\n|\n|\t</separators>
            <soft_dimensions>1</soft_dimensions>
        </component>

        <component name="batch_generator" type="BatchGenerator">
            <batch_size>10</batch_size>
        </component>
        <edge>
                <source socket="count">sentence_reader</source>
                <target socket="count">batch_generator</target>
        </edge>
        <component name="sentence_batcher" type="Batcher">
            <lazy>True</lazy>
        </component>
        <edge>
                <source socket="output">sentence_reader</source>
                <target socket="data">sentence_batcher</target>
        </edge>
        <edge>
                <source socket="batch">batch_generator</source>
                <target socket="indexes">sentence_batcher</target>
        </edge>

        <component name="relation_batcher" type="Batcher">
            <lazy>True</lazy>
        </component>
        <edge>
                <source socket="output">relation_reader</source>
                <target socket="data">relation_batcher</target>
        </edge>
        <edge>
                <source socket="batch">batch_generator</source>
                <target socket="indexes">relation_batcher</target>
        </edge>

        <component name="negative_sampler" type="ListNegativeSampler">
            <is_gold_column>3</is_gold_column>
            <sample_rate>5</sample_rate>
            <use_all_golds>True</use_all_golds>
        </component>
        <edge>
            <source socket="output">relation_batcher</source>
            <target socket="list">negative_sampler</target>
        </edge>

        <component name="ns_split" type="ModeSplitter" language="python">
        </component>
        <edge>
                <source socket="output">negative_sampler</source>
                <target socket="train">ns_split</target>
        </edge>
        <edge>
                <source socket="output">relation_batcher</source>
                <target socket="validate">ns_split</target>
        </edge>
        <edge>
                <source socket="output">relation_batcher</source>
                <target socket="test">ns_split</target>
        </edge>

        <component name="source_edge_slicer" type="DataSlicer" language="python">
            <slice>:,:,2</slice>
        </component>
        <edge>
                <source socket="output">ns_split</source>
                <target socket="input">source_edge_slicer</target>
        </edge>
        <component name="target_edge_slicer" type="DataSlicer" language="python">
            <slice>:,:,3</slice>
        </component>
        <edge>
                <source socket="output">ns_split</source>
                <target socket="input">target_edge_slicer</target>
        </edge>
        <component name="score_slicer" type="DataSlicer" language="python">
            <slice>:,:,1</slice>
        </component>
        <edge>
                <source socket="output">ns_split</source>
                <target socket="input">score_slicer</target>
        </edge>

        <component name="string_formatter" type="StringFormatter" language="python">
            <socket type="in">source_edge</socket>
            <socket type="in">target_edge</socket>
            <action>[source_edge]->[target_edge]</action>
        </component>
        <edge>
                <source socket="output">source_edge_slicer</source>
                <target socket="source_edge">string_formatter</target>
        </edge>
        <edge>
                <source socket="output">target_edge_slicer</source>
                <target socket="target_edge">string_formatter</target>
        </edge>

        <component name="relation_index" type="VectorIndex">
            <width>80</width>
            <length>4000</length>
            <trainable>True</trainable>
        </component>
        <component name="relation_indexer" type="Indexer">
            <input_type>list</input_type>
        </component>
        <edge>
                <source socket="output">string_formatter</source>
                <target socket="input">relation_indexer</target>
        </edge>
        <edge>
                <source socket="index">relation_index</source>
                <target socket="index">relation_indexer</target>
        </edge>

        <component name="relation_embedding_lookup" type="EmbeddingLookup" language="tensorflow">
        </component>
        <edge>
                <source socket="output">relation_indexer</source>
                <target socket="indexes">relation_embedding_lookup</target>
        </edge>
        <edge>
                <source socket="vectors">relation_index</source>
                <target socket="vectors">relation_embedding_lookup</target>
        </edge>

        <component name="score_dim_expander" type="AddDimensions" language="tensorflow">
            <dim_changes>-1:1</dim_changes>
        </component>
        <edge cast="float">
                <source socket="output">score_slicer</source>
                <target socket="input">score_dim_expander</target>
        </edge>

        <component name="rel_concat" type="Concat" language="tensorflow">
        </component>
        <edge>
                <source socket="output">relation_embedding_lookup</source>
                <target socket="left">rel_concat</target>
        </edge>
        <edge>
                <source socket="output">score_dim_expander</source>
                <target socket="right">rel_concat</target>
        </edge>

        <component name="glove" type="FileEmbeddings">
            <file_path>$embedding_filepath</file_path>
            <separator> </separator>
            <width>100</width>
            <stop_token>&lt;s&gt;</stop_token>
            <unk_token>&lt;/s&gt;</unk_token>
        </component>
        <component name="indexer" type="Indexer">
            <input_type>sequence</input_type>
            <input_column>1</input_column>
        </component>
        <edge>
                <source socket="output">sentence_batcher</source>
                <target socket="input">indexer</target>
        </edge>
        <edge>
                <source socket="index">glove</source>
                <target socket="index">indexer</target>
        </edge>

        <component name="embedding_lookup" type="EmbeddingLookup" language="tensorflow">
        </component>
        <edge>
                <source socket="output">indexer</source>
                <target socket="indexes">embedding_lookup</target>
        </edge>
        <edge>
                <source socket="vectors">glove</source>
                <target socket="vectors">embedding_lookup</target>
        </edge>

        <component name="encoder" type="BiRnn" language="tensorflow">
            <cell>lstm</cell>
            <dimension>100</dimension>
        </component>
        <edge>
                <source socket="output">embedding_lookup</source>
                <target socket="input">encoder</target>
        </edge>

        <component name="encoder_dim_expander" type="AddDimensions" language="tensorflow">
            <dim_changes>1:1</dim_changes>
        </component>
        <edge>
                <source socket="final_state">encoder</source>
                <target socket="input">encoder_dim_expander</target>
        </edge>

        <component name="end_concat" type="Concat" language="tensorflow">
            <mark socket="output">prediction</mark>
        </component>
        <edge>
                <source socket="output">rel_concat</source>
                <target socket="left">end_concat</target>
        </edge>
        <edge>
                <source socket="output">encoder_dim_expander</source>
                <target socket="right">end_concat</target>
        </edge>
    </canvas>
</block>